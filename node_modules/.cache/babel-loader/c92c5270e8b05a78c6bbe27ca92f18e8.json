{"ast":null,"code":"import _objectSpread from \"/Users/susanna/apartment-hunt/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/Users/susanna/apartment-hunt/src/context.js\";\nimport React, { Component } from \"react\";\nimport items from \"./data\";\nconst RoomContext = React.createContext();\nexport default class RoomProvider extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      apartments: [],\n      sortedApartments: [],\n      displayedApartments: [],\n      loading: true,\n      //\n      type: \"all\",\n      capacity: 1,\n      price: 0,\n      minPrice: 0,\n      maxPrice: 0,\n      minSize: 0,\n      maxSize: 0,\n      sauna: false,\n      balcony: false\n    };\n\n    this.getRoom = slug => {\n      let tempRooms = [...this.state.rooms];\n      const room = tempRooms.find(room => room.slug === slug);\n      return room;\n    };\n\n    this.handleChange = event => {\n      const target = event.target;\n      const value = target.type === \"checkbox\" ? target.checked : target.value;\n      const name = target.name;\n      console.log(name, value);\n      this.setState({\n        [name]: value\n      }, this.filterRooms);\n    };\n\n    this.filterRooms = () => {\n      let _this$state = this.state,\n          rooms = _this$state.rooms,\n          type = _this$state.type,\n          capacity = _this$state.capacity,\n          price = _this$state.price,\n          minSize = _this$state.minSize,\n          maxSize = _this$state.maxSize,\n          breakfast = _this$state.breakfast,\n          pets = _this$state.pets;\n      let tempRooms = [...rooms]; // transform values\n      // get capacity\n\n      capacity = parseInt(capacity);\n      price = parseInt(price); // filter by type\n\n      if (type !== \"all\") {\n        tempRooms = tempRooms.filter(room => room.type === type);\n      } // filter by capacity\n\n\n      if (capacity !== 1) {\n        tempRooms = tempRooms.filter(room => room.capacity >= capacity);\n      } // filter by price\n\n\n      tempRooms = tempRooms.filter(room => room.price <= price); //filter by size\n\n      tempRooms = tempRooms.filter(room => room.size >= minSize && room.size <= maxSize); //filter by breakfast\n\n      if (breakfast) {\n        tempRooms = tempRooms.filter(room => room.breakfast === true);\n      } //filter by pets\n\n\n      if (pets) {\n        tempRooms = tempRooms.filter(room => room.pets === true);\n      }\n\n      this.setState({\n        sortedRooms: tempRooms\n      });\n    };\n  }\n\n  componentDidMount() {\n    // this.getData();\n    let rooms = this.formatData(items);\n    let featuredRooms = rooms.filter(room => room.featured === true); //\n\n    let maxPrice = Math.max(...rooms.map(item => item.price));\n    let maxSize = Math.max(...rooms.map(item => item.size));\n    this.setState({\n      rooms,\n      featuredRooms,\n      sortedRooms: rooms,\n      loading: false,\n      //\n      price: maxPrice,\n      maxPrice,\n      maxSize\n    });\n  }\n\n  formatData(items) {\n    let tempItems = items.map(item => {\n      let id = item.sys.id;\n      let images = item.fields.images.map(image => image.fields.file.url);\n\n      let room = _objectSpread({}, item.fields, {\n        images,\n        id\n      });\n\n      return room;\n    });\n    return tempItems;\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(RoomContext.Provider, {\n      value: _objectSpread({}, this.state, {\n        getRoom: this.getRoom,\n        handleChange: this.handleChange\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 7\n      }\n    }, this.props.children);\n  }\n\n}\nconst RoomConsumer = RoomContext.Consumer;\nexport { RoomProvider, RoomConsumer, RoomContext };\nexport function withRoomConsumer(Component) {\n  return function ConsumerWrapper(props) {\n    return /*#__PURE__*/React.createElement(RoomConsumer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 7\n      }\n    }, value => /*#__PURE__*/React.createElement(Component, Object.assign({}, props, {\n      context: value,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 19\n      }\n    })));\n  };\n}","map":{"version":3,"sources":["/Users/susanna/apartment-hunt/src/context.js"],"names":["React","Component","items","RoomContext","createContext","RoomProvider","state","apartments","sortedApartments","displayedApartments","loading","type","capacity","price","minPrice","maxPrice","minSize","maxSize","sauna","balcony","getRoom","slug","tempRooms","rooms","room","find","handleChange","event","target","value","checked","name","console","log","setState","filterRooms","breakfast","pets","parseInt","filter","size","sortedRooms","componentDidMount","formatData","featuredRooms","featured","Math","max","map","item","tempItems","id","sys","images","fields","image","file","url","render","props","children","RoomConsumer","Consumer","withRoomConsumer","ConsumerWrapper"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport items from \"./data\";\n\nconst RoomContext = React.createContext();\n\nexport default class RoomProvider extends Component {\n  state = {\n    apartments: [],\n    sortedApartments: [],\n    displayedApartments: [],\n    loading: true,\n    //\n    type: \"all\",\n    capacity: 1,\n    price: 0,\n    minPrice: 0,\n    maxPrice: 0,\n    minSize: 0,\n    maxSize: 0,\n    sauna: false,\n    balcony: false\n  };\n\n\n  componentDidMount() {\n    // this.getData();\n    let rooms = this.formatData(items);\n    let featuredRooms = rooms.filter(room => room.featured === true);\n    //\n    let maxPrice = Math.max(...rooms.map(item => item.price));\n    let maxSize = Math.max(...rooms.map(item => item.size));\n    this.setState({\n      rooms,\n      featuredRooms,\n      sortedRooms: rooms,\n      loading: false,\n      //\n      price: maxPrice,\n      maxPrice,\n      maxSize\n    });\n  }\n\n  formatData(items) {\n    let tempItems = items.map(item => {\n      let id = item.sys.id;\n      let images = item.fields.images.map(image => image.fields.file.url);\n\n      let room = { ...item.fields, images, id };\n      return room;\n    });\n    return tempItems;\n  }\n  getRoom = slug => {\n    let tempRooms = [...this.state.rooms];\n    const room = tempRooms.find(room => room.slug === slug);\n    return room;\n  };\n  handleChange = event => {\n    const target = event.target;\n    const value = target.type === \"checkbox\" ? target.checked : target.value;\n    const name = target.name;\n    console.log(name, value);\n\n    this.setState(\n      {\n        [name]: value\n      },\n      this.filterRooms\n    );\n  };\n  filterRooms = () => {\n    let {\n      rooms,\n      type,\n      capacity,\n      price,\n      minSize,\n      maxSize,\n      breakfast,\n      pets\n    } = this.state;\n\n    let tempRooms = [...rooms];\n    // transform values\n    // get capacity\n    capacity = parseInt(capacity);\n    price = parseInt(price);\n    // filter by type\n    if (type !== \"all\") {\n      tempRooms = tempRooms.filter(room => room.type === type);\n    }\n    // filter by capacity\n    if (capacity !== 1) {\n      tempRooms = tempRooms.filter(room => room.capacity >= capacity);\n    }\n    // filter by price\n    tempRooms = tempRooms.filter(room => room.price <= price);\n    //filter by size\n    tempRooms = tempRooms.filter(\n      room => room.size >= minSize && room.size <= maxSize\n    );\n    //filter by breakfast\n    if (breakfast) {\n      tempRooms = tempRooms.filter(room => room.breakfast === true);\n    }\n    //filter by pets\n    if (pets) {\n      tempRooms = tempRooms.filter(room => room.pets === true);\n    }\n    this.setState({\n      sortedRooms: tempRooms\n    });\n  };\n  render() {\n    return (\n      <RoomContext.Provider\n        value={{\n          ...this.state,\n          getRoom: this.getRoom,\n          handleChange: this.handleChange\n        }}\n      >\n        {this.props.children}\n      </RoomContext.Provider>\n    );\n  }\n}\nconst RoomConsumer = RoomContext.Consumer;\n\nexport { RoomProvider, RoomConsumer, RoomContext };\n\nexport function withRoomConsumer(Component) {\n  return function ConsumerWrapper(props) {\n    return (\n      <RoomConsumer>\n        {value => <Component {...props} context={value} />}\n      </RoomConsumer>\n    );\n  };\n}\n"]},"metadata":{},"sourceType":"module"}